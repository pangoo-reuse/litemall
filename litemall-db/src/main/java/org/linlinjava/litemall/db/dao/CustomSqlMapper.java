package org.linlinjava.litemall.db.dao;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.linlinjava.litemall.db.util.OrderUtil;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

public interface CustomSqlMapper {
    List<Map> excSql(String sql);

    @Select("SELECT SUM(if(referrer_id = #{userId,jdbcType=INTEGER} ,commission,0.0)) FROM litemall_referral_views GROUP BY referrer_id")
    BigDecimal calculateReferrerViews(@Param("userId") Integer userId);

    @Select("SELECT SUM(if(referrer_id = #{userId,jdbcType=INTEGER} ,commission,0.0)) FROM litemall_referral_orders GROUP BY referrer_id")
    BigDecimal calculateReferrerOrders(@Param("userId") Integer userId);

    @Select("SELECT SUM(if(referrer_id = #{userId,jdbcType=INTEGER} ,commission,0.0)) FROM litemall_referral_views WHERE state = -1 GROUP BY referrer_id")
    BigDecimal calculateReferrerViewsAvailable(@Param("userId") Integer userId);

    @Select("SELECT SUM(if(referrer_id = #{userId,jdbcType=INTEGER} ,commission,0.0)) FROM litemall_referral_orders WHERE state = -1 GROUP BY referrer_id")
    BigDecimal calculateReferrerOrdersAvailable(@Param("userId") Integer userId);

//    <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallOrderGoodsExample" resultType="java.lang.Long">
//    <!--
//    WARNING - @mbg.generated
//    This element is automatically generated by MyBatis Generator, do not modify.
//            -->
//    select count(*) from litemall_order_goods
//    <if test="_parameter != null">
//      <include refid="Example_Where_Clause" />
//    </if>
//  </select>
    @Select("select count(*) from litemall_order_goods ogd left join litemall_order o on ( ogd.order_id = o.id) where ogd.product_id = #{productId,jdbcType=INTEGER}  and o.p2p_rule_id = #{ruleId,jdbcType=INTEGER}  ")
    int orderP2pCountByProductId(Integer productId,Integer ruleId);

    @Select("select count(*) from litemall_p2p_rule where goods_id = #{goodsId,jdbcType=INTEGER} and status = 1 and expire_time > NOW()")
    int existP2pRuleCount(Integer goodsId);

}
